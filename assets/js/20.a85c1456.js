(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{526:function(t,e,v){"use strict";v.r(e);var _=v(22),s=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"宏任务和微任务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务"}},[t._v("#")]),t._v(" 宏任务和微任务")]),t._v(" "),v("p",[t._v("在js中，事件循环是通过任务队列来协调的，一个事件循环里可以有一个或多个任务队列")]),t._v(" "),v("p",[t._v("在js中，任务分为同步任务和异步任务，同步任务都在主线程上执行，形成一个执行栈，在主线程外，事件触发线程管着一个任务队列，只要异步任务有了允许结果，就在在任务队列中放入一个事件。")]),t._v(" "),v("p",[t._v("当执行栈中所有同步任务执行完毕后，系统就会读取任务队列，将可运行的异步任务添加到执行栈中执行")]),t._v(" "),v("p",[v("code",[t._v("宏任务")]),t._v(": 可以理解成执行栈中执行的代码就是一个宏任务，\n主要是：script、setTimeout、setInterval、I/O、UI交互事件")]),t._v(" "),v("p",[v("code",[t._v("微任务")]),t._v(": 可以理解成在一个宏任务执行完毕，下一个宏任务和浏览器渲染执行执行的任务\n主要是：Promise.then、Object.observer、MutationObserver")]),t._v(" "),v("p",[t._v("一个事件循环：")]),t._v(" "),v("ol",[v("li",[t._v("读取一个宏任务执行")]),t._v(" "),v("li",[t._v("执行完毕后检查微任务队列是否为空")]),t._v(" "),v("li",[t._v("如果不为空，将微任务队列中的微任务全部执行完")]),t._v(" "),v("li",[t._v("如果为空，进行浏览器渲染")]),t._v(" "),v("li",[t._v("渲染完毕后，取出下一个宏任务")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://pic2.zhimg.com/80/v2-e6dd78c74cb671dd9408c2273308a265_720w.jpg",alt:"EventLoop"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);